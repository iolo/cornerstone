concurrency:
  group: npm-publish-${{github.sha}}
  cancel-in-progress: false

on:
  push:
    branches:
      - main
    paths-ignore:
      - nodejs/commons/src/**/*.spec.ts
      - .github/**/*

defaults:
  run:
    working-directory: 'nodejs/commons'
    shell: bash

env:
  PUSH_TOKEN: ${{ secrets.NPM_TOKEN }}
  PACKAGE_TOKEN: ${{ secrets.NPM_TOKEN }}
  WORKING_DIRECTORY: 'nodejs/commons'

jobs:
  ci-label-test:
    outputs:
      buildable: ${{ !contains(steps.PR.outputs.pr_labels.*.name, 'ci-skip') }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - uses: 8BitJonny/gh-get-current-pr@1.4.0
        id: PR
        with:
          github-token: ${{ secrets.NPM_TOKEN }}

  build:
    needs: ci-label-test
    if: needs.ci-label-test.outputs.buildable == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 100 # 최근 100개 커밋에서 package.json 버전변경 확인
          token: ${{ env.PUSH_TOKEN }}

      - name: Prepare
        uses: day1co/actions/composites/prepare-node@main
        with:
          node-version: '16.x'
          working-dir: ${{ env.WORKING_DIRECTORY }}
          npm-token: ${{ secrets.NPM_TOKEN }}

      - name: Version change check
        id: version-changed
        # package.json 파일의 diff를 확보한 후 `+  "version":` 라인을 확인함.
        # GNU grep의 exit 코드에 따른 Github Actions의 Fail 방지를 위해 무조건 true를 리턴하게 함.
        run: |
          VERSION_CHANGED=$(git diff ${{ github.event.before }}..${{ github.event.after }} package.json | (grep -c -E "^\+\s+\"version\"" || true) )
          echo "::set-output name=version_changed::$VERSION_CHANGED"

      - name: npm version patch when versionChanged eq 0
        if: ${{ steps.version-changed.outputs.version_changed == 0 }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

          npm --no-git-tag-version version patch
          PACKAGE_NAME=$(jq -r .name package.json)
          PACKAGE_VERSION=$(jq -r .version package.json)

          git commit -m "$PACKAGE_NAME: bump up to $PACKAGE_VERSION"$'\n'"[ci skip]" $GITHUB_WORKSPACE
          git pull --rebase
          git push origin

      - name: publish
        run: |
          npm ci
          npm publish
          CHANGE_LOG=$(git --no-pager log ${{ github.event.before }}..${{ github.event.after }} --pretty=format:"%an - %s")
          $GITHUB_WORKSPACE/.github/npm-publish-slack.sh "$CHANGE_LOG" ${{ secrets.SLACK_WEBHOOK_URL }}
